version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: expense-tracker-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: expense_tracker
      POSTGRES_USER: expense_user
      POSTGRES_PASSWORD: expense_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - expense-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U expense_user -d expense_tracker"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Expense Tracker Application
  expense-tracker:
    image: com.expense.tracker/expense-tracker:1.0-SNAPSHOT
    container_name: expense-tracker-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Spring Profile
      SPRING_PROFILES_ACTIVE: docker
      
      # Database Configuration
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/expense_tracker
      SPRING_R2DBC_USERNAME: expense_user
      SPRING_R2DBC_PASSWORD: expense_password
      
      # Flyway Configuration (for migrations)
      SPRING_FLYWAY_URL: jdbc:postgresql://postgres:5432/expense_tracker
      SPRING_FLYWAY_USER: expense_user
      SPRING_FLYWAY_PASSWORD: expense_password
      
      # Application Configuration
      SERVER_PORT: 8080
      LOGGING_LEVEL_COM_EXPENSE: DEBUG
      
      # JWT Configuration (you'll need to set these)
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRATION: 86400000
      
      # Management endpoints
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,info,metrics,prometheus
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - expense-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s


volumes:
  postgres_data:
    driver: local

networks:
  expense-network:
    driver: bridge
